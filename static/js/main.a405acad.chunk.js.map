{"version":3,"sources":["App.jsx","serviceWorker.js","index.js"],"names":["blank_arr","basic_data","useStyles","makeStyles","theme","root","margin","spacing","loopTimesN","App","useState","soduku","setSuduku","isLoading","setisLoading","setNum","event","area","target","dataset","index","new_suduku","JSON","parse","stringify","value","length","Number","checkNumError","array","e","new_arr","this_row_area","this_row","checkSame","filter","item","idx","new_row","forEach","i","j","push","this_col_area","this_col","checkRow","new_col","checkCol","create","clean","randomArr","iIndex","console","log","rowGroup_arr","rowGroup","colGroup_arr","colGroup","used_num","Set","use_num","indexOf","reset","randomNub","Math","floor","random","exclude","loopArr","temp","use_data","a","tmp_data","splice","exclude_arr","flat","slice","jIndex","x","y","useEffect","classes","className","CircularProgress","color","map","areaindex","key","itemIndex","Input","type","onChange","inputProps","min","max","maxLength","error","Button","variant","size","onClick","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.a405acad.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Input } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './assets/sass/App.scss';\n\nconst blank_arr = [\n  [0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0]\n]\nconst basic_data = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nvar loopTimesN = 0;\n\nfunction App() {\n  const [soduku, setSuduku] = useState(blank_arr)\n  const [isLoading, setisLoading] = useState(true)\n  // console.log('soduku', soduku)\n\n  useEffect(() => {\n    // 數獨Data發生改變時觸發\n    // setisLoading(true)\n    console.log('useEffect')\n    // create()\n    setisLoading(false)\n    return () => {\n\n    }\n  }, [])\n\n  // 填入數字\n  function setNum(event) {\n    // console.log('set', event.target.dataset.area)\n    // console.log('value', event.target.value)\n    let area = event.target.dataset.area\n    let index = event.target.dataset.index\n    let new_suduku = JSON.parse(JSON.stringify(soduku))\n\n    if (event.target.value.length > 1) {\n      if (event.target.value[0] === 0) {\n        event.target.value = event.target.value[1]\n      } else {\n        event.target.value = event.target.value[0]\n      }\n    }\n    // console.log('soduku 的位置', new_suduku[area][index])\n    new_suduku[area][index] = Number(event.target.value)\n    setSuduku(new_suduku)\n    // console.log('最後的soduku',soduku)\n  }\n\n  // 判斷數字是否在9宮格、行、列內，是否重複\n  function checkNumError(array, area, e, index, new_arr) {\n    // array=>當下array，area=>當下區域位置，e=>當下的數字， index=>當下的位置\n    // console.log('array, area, e, index', array, area, e, index)\n    // 沒有填的排除\n    if (e === 0) {\n      return false\n    }\n\n\n    // 9宮格判斷\n    let checkSame = array.filter((item, idx) => {\n      return item === e\n    })\n    // console.log('checkSame', checkSame)\n    // 9宮格判斷\n\n    // 列判斷\n    let this_row_area;\n    switch (area) {\n      case 0:\n      case 1:\n      case 2:\n        this_row_area = [0, 1, 2]\n        break;\n      case 3:\n      case 4:\n      case 5:\n        this_row_area = [3, 4, 5]\n        break;\n      case 6:\n      case 7:\n      case 8:\n        this_row_area = [6, 7, 8]\n        break;\n      default:\n        break;\n    }\n\n    let this_row;\n    switch (index) {\n      case 0:\n      case 1:\n      case 2:\n        this_row = [0, 1, 2]\n        break;\n      case 3:\n      case 4:\n      case 5:\n        this_row = [3, 4, 5]\n        break;\n      case 6:\n      case 7:\n      case 8:\n        this_row = [6, 7, 8]\n        break;\n      default:\n        break;\n    }\n    // console.log('this_row_area', this_row_area)\n    // console.log('this_row', this_row)\n    let new_suduku = new_arr || JSON.parse(JSON.stringify(soduku))\n    let new_row = []\n    // console.log('new_suduku', new_suduku)\n    this_row_area.forEach(i => {\n      this_row.forEach(j => {\n        new_row.push(new_suduku[i][j])\n      })\n    });\n    // console.log('這列有的數字',new_row)\n    let checkRow = new_row.filter((item, idx) => {\n      return item === e\n    })\n\n    // 列判斷\n\n    // 行判斷\n    let this_col_area;\n    switch (area) {\n      case 0:\n      case 3:\n      case 6:\n        this_col_area = [0, 3, 6]\n        break;\n      case 1:\n      case 4:\n      case 7:\n        this_col_area = [1, 4, 7]\n        break;\n      case 2:\n      case 5:\n      case 8:\n        this_col_area = [2, 5, 8]\n        break;\n      default:\n        break;\n    }\n\n    let this_col;\n    switch (index) {\n      case 0:\n      case 3:\n      case 6:\n        this_col = [0, 3, 6]\n        break;\n      case 1:\n      case 4:\n      case 7:\n        this_col = [1, 4, 7]\n        break;\n      case 2:\n      case 5:\n      case 8:\n        this_col = [2, 5, 8]\n        break;\n      default:\n        break;\n    }\n    // console.log('this_col_area', this_col_area)\n    // console.log('this_col', this_col)\n    let new_col = []\n    // console.log('new_suduku', new_suduku)\n    this_col_area.forEach(i => {\n      this_col.forEach(j => {\n        new_col.push(new_suduku[i][j])\n      })\n    });\n    // console.log('這列有的數字',new_col)\n    let checkCol = new_col.filter((item, idx) => {\n      return item === e\n    })\n    // console.log('checkCol', checkCol)\n    // 行判斷\n\n    // 如果有任何一個重複就標記error\n    if (checkSame.length > 1 || checkRow.length > 1 || checkCol.length > 1) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  // 創建數獨\n  function create() {\n    \n    clean()\n    setisLoading(true)\n    let new_arr = JSON.parse(JSON.stringify(blank_arr))\n\n    new_arr[0] = randomArr()\n    new_arr[4] = randomArr()\n    new_arr[8] = randomArr()\n    setSuduku(new_arr)\n    loopArr(new_arr)\n    setisLoading(false)\n  }\n\n  function loopArr(new_arr) {\n    // console.log('loopArr開始的區域=>', this_area)\n\n    for (let iIndex = 0; iIndex < new_arr.length; iIndex++) {\n      \n      if (iIndex === 0 || iIndex === 4 || iIndex === 8) {\n        console.log('continue=>', iIndex)\n        if(iIndex ===8) {\n          exclude(new_arr)\n        }\n        continue\n        // 排除固定區域\n      } else {\n        console.log(`====目前是第 ${iIndex} 區計算中====`)\n        loopTimesN++\n        console.log('重複了loopTimesN次=>', loopTimesN)\n\n        // 防止計算時間過長\n        if (loopTimesN > 600) {\n          setSuduku(blank_arr)\n          loopTimesN = 0\n          // alert('計算錯誤！！！重新再試', loopTimesN)\n          // return\n          return create()\n        }\n        // 防止計算時間過長\n\n        let rowGroup_arr = rowGroup(new_arr[iIndex], iIndex, new_arr)\n        let colGroup_arr = colGroup(new_arr[iIndex], iIndex, new_arr)\n        // console.log('目前列row有的數字',rowGroup(new_arr[iIndex], iIndex, new_arr))\n        // console.log('目前行col有的數字',colGroup(new_arr[iIndex], iIndex, new_arr))\n\n        // 循環填入9宮格\n        let j = 0\n        while (j < 9) {\n          if (new_arr[iIndex][j] === 0) {\n            // console.log(`${iIndex}區域已使用的數字集合`, i);\n            let used_num = [...(new Set([...rowGroup_arr[j], ...colGroup_arr[j], ...new_arr[iIndex]]))]\n            // console.log(`${iIndex}區域${j}位置已使用的數字集合`,used_num);\n\n            let use_num = JSON.parse(JSON.stringify(basic_data)).filter(e => {\n              return used_num.indexOf(e) === -1\n            })\n            // console.log(`${iIndex}-${j}位置可使用的數字集合`, use_num);\n\n            // 如果可以用的數字為0，則整組數字重填\n            if (use_num.length === 0) {\n              // 如果這個array無法填完數字，則loopArr上一個\n              let reset = iIndex - 1\n              \n              // 排除固定[0,4,8]區域\n              if (reset === 0) {\n                reset = 1\n              } else if (reset === 4) {\n                reset = 3\n              }\n              console.log(`${iIndex}-${j}位置無法填入，要重填=> ${reset}區`)\n              new_arr[reset] = [0, 0, 0, 0, 0, 0, 0, 0, 0]\n              new_arr[iIndex] = [0, 0, 0, 0, 0, 0, 0, 0, 0]\n\n              // 控制上層迴圈\n              iIndex = reset -1\n              \n              break\n            } else {\n              // 隨機取得一個數字\n              let randomNub = (Math.floor(Math.random() * (use_num.length)));\n              // console.log('randomNub', randomNub, use_num[randomNub])\n              new_arr[iIndex][j] = use_num[randomNub]\n              j++\n            }\n          }\n        }\n        console.log(`====目前是第 ${iIndex} 區計算結束====`)\n\n        // 放入loop出來的數字\n        // new_arr = loopNum(new_arr[iIndex], iIndex, new_arr)\n        // 寫入 new_arr\n        // new_arr = temp_new_arr\n\n        // 正式寫入\n        setSuduku(new_arr)\n\n      }\n    }\n  }\n\n  function randomArr() {\n    let use_data = JSON.parse(JSON.stringify(basic_data))\n    let a = use_data.length\n    let temp\n    let new_suduku = []\n\n    while (a > 0) {\n      let tmp_data = use_data\n      // console.log('while tmp_data', tmp_data)\n      // console.log('while a',a)\n      let randomNub = (Math.floor(Math.random() * tmp_data.length) + 1);\n      // console.log('while randomNub', randomNub)\n      temp = tmp_data[randomNub - 1]\n      // console.log('while temp', temp)\n      // console.log('indeOf =>', tmp_data.indexOf(temp))\n      tmp_data = JSON.parse(JSON.stringify(tmp_data.splice(tmp_data.indexOf(temp), 1)))\n      // console.log('use_data end =>', tmp_data)\n\n      let index = 9 - a\n      new_suduku[index] = (temp)\n      a--\n    }\n    // console.log('new_suduku',new_suduku)\n\n    return new_suduku\n  }\n\n  function exclude(new_arr) {\n    // let randomNub = (Math.floor(Math.random() * 9) + 1);\n    // console.log('exclude', new_arr.flat(), 'randomNub=>', randomNub);\n\n    let exclude_arr = JSON.parse(JSON.stringify(new_arr.flat()))\n    let i = 0\n    while (i<50) {\n      let randomNub = (Math.floor(Math.random() * 81));\n      // console.log('randomNub=>', randomNub);\n      if (exclude_arr[randomNub] ===0 ){\n        continue\n      }\n      exclude_arr.splice(randomNub, 1, 0)\n      i++\n    }\n    let new_suduku = []\n    for (let index = 0; index < 9; index++) {\n      new_suduku.push(exclude_arr.slice(index*9, (index+1)*9))\n    }\n    console.log('exclude_arr', exclude_arr);\n    console.log('new_suduku', new_suduku);\n    setSuduku(new_suduku)\n  }\n\n  function reset() {\n    console.log('reset')\n    setSuduku(blank_arr)\n    // await create()\n    setisLoading(true)\n    create()\n    setisLoading(false)\n  }\n\n  function clean() {\n    console.log('clean')\n    setSuduku(blank_arr)\n  }\n\n\n  function rowGroup(i, iIndex, new_arr) {\n    let rowGroup = []\n    i.forEach((j, jIndex) => {\n      let this_row_area;\n      switch (iIndex) {\n        case 0:\n        case 1:\n        case 2:\n          this_row_area = [0, 1, 2]\n          break;\n        case 3:\n        case 4:\n        case 5:\n          this_row_area = [3, 4, 5]\n          break;\n        case 6:\n        case 7:\n        case 8:\n          this_row_area = [6, 7, 8]\n          break;\n        default:\n          break;\n      }\n\n      let this_row;\n      switch (jIndex) {\n        case 0:\n        case 1:\n        case 2:\n          this_row = [0, 1, 2]\n          break;\n        case 3:\n        case 4:\n        case 5:\n          this_row = [3, 4, 5]\n          break;\n        case 6:\n        case 7:\n        case 8:\n          this_row = [6, 7, 8]\n          break;\n        default:\n          break;\n      }\n      let new_suduku = new_arr || JSON.parse(JSON.stringify(soduku))\n      let new_row = []\n      // console.log('new_suduku', new_suduku)\n      this_row_area.forEach(x => {\n        this_row.forEach(y => {\n          new_row.push(new_suduku[x][y])\n        })\n      });\n      // console.log('this_row_area', this_row_area);\n      // console.log('new_row', new_row);\n\n      rowGroup.push(new_row)\n    })\n    return rowGroup\n  }\n\n  function colGroup(i, iIndex, new_arr) {\n    let colGroup = []\n    i.forEach((j, jIndex) => {\n      let this_col_area;\n      switch (iIndex) {\n        case 0:\n        case 3:\n        case 6:\n          this_col_area = [0, 3, 6]\n          break;\n        case 1:\n        case 4:\n        case 7:\n          this_col_area = [1, 4, 7]\n          break;\n        case 2:\n        case 5:\n        case 8:\n          this_col_area = [2, 5, 8]\n          break;\n        default:\n          break;\n      }\n\n      let this_col;\n      switch (jIndex) {\n        case 0:\n        case 3:\n        case 6:\n          this_col = [0, 3, 6]\n          break;\n        case 1:\n        case 4:\n        case 7:\n          this_col = [1, 4, 7]\n          break;\n        case 2:\n        case 5:\n        case 8:\n          this_col = [2, 5, 8]\n          break;\n        default:\n          break;\n      }\n      let new_suduku = new_arr || JSON.parse(JSON.stringify(soduku))\n      let new_col = []\n      // console.log('new_suduku', new_suduku)\n      this_col_area.forEach(x => {\n        this_col.forEach(y => {\n          new_col.push(new_suduku[x][y])\n        })\n      });\n      // console.log('this_col_area', this_col_area);\n      // console.log('new_col', new_col);\n      colGroup.push(new_col)\n\n    })\n    return colGroup\n  }\n\n  const classes = useStyles();\n\n  return (\n    <div className=\"App\">\n      <main className=\"App-main\">\n        {/* <div className=\"loading_block\"><CircularProgress color=\"secondary\" /></div> */}\n        {\n          isLoading\n            ? <div className=\"loading_block\"><CircularProgress color=\"secondary\" /></div>\n            : <ul className=\"sd\">\n                {\n                soduku.map((area, areaindex) => \n                      <li key={areaindex}>\n                        {\n                          area.map((item, itemIndex) => \n                            <Input key={`${areaindex}-${itemIndex}`} color=\"secondary\" type=\"number\" onChange={setNum} inputProps={{ min: 1, max: 9, maxLength: 1, 'data-area': areaindex, 'data-index': itemIndex }} value={item || ''} error={checkNumError(area, areaindex, item, itemIndex)}/>\n                          )\n                        }  \n                      </li>\n                  )\n                }\n              </ul>\n        }\n        <div className={classes.root}>\n          <Button variant=\"contained\" size=\"small\" onClick={() => { reset() }}>\n            重新生產\n          </Button>\n          <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={() => { clean() }}>\n            清空\n          </Button>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/sass/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}